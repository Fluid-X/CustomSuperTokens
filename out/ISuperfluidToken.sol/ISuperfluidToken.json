{"abi":[{"type":"function","name":"createAgreement","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAccountActiveAgreements","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"activeAgreements","type":"address[]","internalType":"contract ISuperAgreement[]"}],"stateMutability":"view"},{"type":"function","name":"getAgreementData","inputs":[{"name":"agreementClass","type":"address","internalType":"address"},{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"dataLength","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"data","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getAgreementStateSlot","inputs":[{"name":"agreementClass","type":"address","internalType":"address"},{"name":"account","type":"address","internalType":"address"},{"name":"slotId","type":"uint256","internalType":"uint256"},{"name":"dataLength","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"slotData","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getHost","inputs":[],"outputs":[{"name":"host","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isAccountCritical","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"timestamp","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"isCritical","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAccountCriticalNow","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"isCritical","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAccountSolvent","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"timestamp","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"isSolvent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAccountSolventNow","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"isSolvent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"makeLiquidationPayoutsV2","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"liquidationTypeData","type":"bytes","internalType":"bytes"},{"name":"liquidatorAccount","type":"address","internalType":"address"},{"name":"useDefaultRewardAccount","type":"bool","internalType":"bool"},{"name":"targetAccount","type":"address","internalType":"address"},{"name":"rewardAmount","type":"uint256","internalType":"uint256"},{"name":"targetAccountBalanceDelta","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"realtimeBalanceOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"timestamp","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"availableBalance","type":"int256","internalType":"int256"},{"name":"deposit","type":"uint256","internalType":"uint256"},{"name":"owedDeposit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"realtimeBalanceOfNow","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"availableBalance","type":"int256","internalType":"int256"},{"name":"deposit","type":"uint256","internalType":"uint256"},{"name":"owedDeposit","type":"uint256","internalType":"uint256"},{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"settleBalance","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"delta","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"terminateAgreement","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"dataLength","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAgreementData","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAgreementStateSlot","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"slotId","type":"uint256","internalType":"uint256"},{"name":"slotData","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AgreementCreated","inputs":[{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"data","type":"bytes32[]","indexed":false,"internalType":"bytes32[]"}],"anonymous":false},{"type":"event","name":"AgreementLiquidated","inputs":[{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"penaltyAccount","type":"address","indexed":true,"internalType":"address"},{"name":"rewardAccount","type":"address","indexed":true,"internalType":"address"},{"name":"rewardAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AgreementLiquidatedBy","inputs":[{"name":"liquidatorAccount","type":"address","indexed":false,"internalType":"address"},{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"penaltyAccount","type":"address","indexed":true,"internalType":"address"},{"name":"bondAccount","type":"address","indexed":true,"internalType":"address"},{"name":"rewardAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"bailoutAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AgreementLiquidatedV2","inputs":[{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"liquidatorAccount","type":"address","indexed":true,"internalType":"address"},{"name":"targetAccount","type":"address","indexed":true,"internalType":"address"},{"name":"rewardAmountReceiver","type":"address","indexed":false,"internalType":"address"},{"name":"rewardAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"targetAccountBalanceDelta","type":"int256","indexed":false,"internalType":"int256"},{"name":"liquidationTypeData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"AgreementStateUpdated","inputs":[{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"slotId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AgreementTerminated","inputs":[{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"AgreementUpdated","inputs":[{"name":"agreementClass","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"data","type":"bytes32[]","indexed":false,"internalType":"bytes32[]"}],"anonymous":false},{"type":"event","name":"Bailout","inputs":[{"name":"bailoutAccount","type":"address","indexed":true,"internalType":"address"},{"name":"bailoutAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"SF_TOKEN_AGREEMENT_ALREADY_EXISTS","inputs":[]},{"type":"error","name":"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST","inputs":[]},{"type":"error","name":"SF_TOKEN_BURN_INSUFFICIENT_BALANCE","inputs":[]},{"type":"error","name":"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE","inputs":[]},{"type":"error","name":"SF_TOKEN_ONLY_HOST","inputs":[]},{"type":"error","name":"SF_TOKEN_ONLY_LISTED_AGREEMENT","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createAgreement(bytes32,bytes32[])":"12a6a3f8","getAccountActiveAgreements(address)":"386fa221","getAgreementData(address,bytes32,uint256)":"6c2d9f2f","getAgreementStateSlot(address,address,uint256,uint256)":"4b61cc33","getHost()":"20bc4425","isAccountCritical(address,uint256)":"d9d078d6","isAccountCriticalNow(address)":"79359f6f","isAccountSolvent(address,uint256)":"b84cdd4a","isAccountSolventNow(address)":"bb0d196e","makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)":"1863e809","realtimeBalanceOf(address,uint256)":"eb3537cc","realtimeBalanceOfNow(address)":"2ec8eec7","settleBalance(address,int256)":"cf97256d","terminateAgreement(bytes32,uint256)":"27048397","updateAgreementData(bytes32,bytes32[])":"a1b2bf8b","updateAgreementStateSlot(address,uint256,bytes32[])":"090c415e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}}},\"kind\":\"dev\",\"methods\":{\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}}},\"title\":\"Superfluid token interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":\"ISuperfluidToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/=lib/superfluid-protocol-monorepo/packages/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"],\"viaIR\":true},\"sources\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"SF_TOKEN_AGREEMENT_ALREADY_EXISTS"},{"inputs":[],"type":"error","name":"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"},{"inputs":[],"type":"error","name":"SF_TOKEN_BURN_INSUFFICIENT_BALANCE"},{"inputs":[],"type":"error","name":"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"},{"inputs":[],"type":"error","name":"SF_TOKEN_ONLY_HOST"},{"inputs":[],"type":"error","name":"SF_TOKEN_ONLY_LISTED_AGREEMENT"},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false},{"internalType":"bytes32[]","name":"data","type":"bytes32[]","indexed":false}],"type":"event","name":"AgreementCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false},{"internalType":"address","name":"penaltyAccount","type":"address","indexed":true},{"internalType":"address","name":"rewardAccount","type":"address","indexed":true},{"internalType":"uint256","name":"rewardAmount","type":"uint256","indexed":false}],"type":"event","name":"AgreementLiquidated","anonymous":false},{"inputs":[{"internalType":"address","name":"liquidatorAccount","type":"address","indexed":false},{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false},{"internalType":"address","name":"penaltyAccount","type":"address","indexed":true},{"internalType":"address","name":"bondAccount","type":"address","indexed":true},{"internalType":"uint256","name":"rewardAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"bailoutAmount","type":"uint256","indexed":false}],"type":"event","name":"AgreementLiquidatedBy","anonymous":false},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false},{"internalType":"address","name":"liquidatorAccount","type":"address","indexed":true},{"internalType":"address","name":"targetAccount","type":"address","indexed":true},{"internalType":"address","name":"rewardAmountReceiver","type":"address","indexed":false},{"internalType":"uint256","name":"rewardAmount","type":"uint256","indexed":false},{"internalType":"int256","name":"targetAccountBalanceDelta","type":"int256","indexed":false},{"internalType":"bytes","name":"liquidationTypeData","type":"bytes","indexed":false}],"type":"event","name":"AgreementLiquidatedV2","anonymous":false},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"slotId","type":"uint256","indexed":false}],"type":"event","name":"AgreementStateUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false}],"type":"event","name":"AgreementTerminated","anonymous":false},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address","indexed":true},{"internalType":"bytes32","name":"id","type":"bytes32","indexed":false},{"internalType":"bytes32[]","name":"data","type":"bytes32[]","indexed":false}],"type":"event","name":"AgreementUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"bailoutAccount","type":"address","indexed":true},{"internalType":"uint256","name":"bailoutAmount","type":"uint256","indexed":false}],"type":"event","name":"Bailout","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32[]","name":"data","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"createAgreement"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getAccountActiveAgreements","outputs":[{"internalType":"contract ISuperAgreement[]","name":"activeAgreements","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address"},{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"dataLength","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAgreementData","outputs":[{"internalType":"bytes32[]","name":"data","type":"bytes32[]"}]},{"inputs":[{"internalType":"address","name":"agreementClass","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"slotId","type":"uint256"},{"internalType":"uint256","name":"dataLength","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAgreementStateSlot","outputs":[{"internalType":"bytes32[]","name":"slotData","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getHost","outputs":[{"internalType":"address","name":"host","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function","name":"isAccountCritical","outputs":[{"internalType":"bool","name":"isCritical","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isAccountCriticalNow","outputs":[{"internalType":"bool","name":"isCritical","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function","name":"isAccountSolvent","outputs":[{"internalType":"bool","name":"isSolvent","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isAccountSolventNow","outputs":[{"internalType":"bool","name":"isSolvent","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes","name":"liquidationTypeData","type":"bytes"},{"internalType":"address","name":"liquidatorAccount","type":"address"},{"internalType":"bool","name":"useDefaultRewardAccount","type":"bool"},{"internalType":"address","name":"targetAccount","type":"address"},{"internalType":"uint256","name":"rewardAmount","type":"uint256"},{"internalType":"int256","name":"targetAccountBalanceDelta","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"makeLiquidationPayoutsV2"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function","name":"realtimeBalanceOf","outputs":[{"internalType":"int256","name":"availableBalance","type":"int256"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"uint256","name":"owedDeposit","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"realtimeBalanceOfNow","outputs":[{"internalType":"int256","name":"availableBalance","type":"int256"},{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"uint256","name":"owedDeposit","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"int256","name":"delta","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"settleBalance"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"dataLength","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"terminateAgreement"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32[]","name":"data","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"updateAgreementData"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"slotId","type":"uint256"},{"internalType":"bytes32[]","name":"slotData","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"updateAgreementStateSlot"}],"devdoc":{"kind":"dev","methods":{"createAgreement(bytes32,bytes32[])":{"details":"Create a new agreement","params":{"data":"Agreement data","id":"Agreement ID"}},"getAccountActiveAgreements(address)":{"details":"An active agreement is one that has state for the account","params":{"account":"Account to query"},"returns":{"activeAgreements":"List of accounts that have non-zero states for the account"}},"getAgreementData(address,bytes32,uint256)":{"details":"Get data of the agreement","params":{"agreementClass":"Contract address of the agreement","id":"Agreement ID"},"returns":{"data":"Data of the agreement"}},"getAgreementStateSlot(address,address,uint256,uint256)":{"details":"Get data of the slot of the state of an agreement","params":{"account":"Account to query","agreementClass":"Contract address of the agreement","dataLength":"length of the state data","slotId":"slot id of the state"}},"getHost()":{"details":"Get superfluid host contract address"},"isAccountCritical(address,uint256)":{"details":"A critical account is when availableBalance < 0","params":{"account":"The account to check","timestamp":"The time we'd like to check if the account is critical (should use future)"},"returns":{"isCritical":"Whether the account is critical"}},"isAccountCriticalNow(address)":{"details":"A critical account is when availableBalance < 0","params":{"account":"The account to check"},"returns":{"isCritical":"Whether the account is critical"}},"isAccountSolvent(address,uint256)":{"details":"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance","params":{"account":"The account to check","timestamp":"The time we'd like to check if the account is solvent (should use future)"},"returns":{"isSolvent":"True if the account is solvent, false otherwise"}},"isAccountSolventNow(address)":{"details":"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance","params":{"account":"The account to check"},"returns":{"isSolvent":"True if the account is solvent, false otherwise"}},"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)":{"custom:modifiers":"  - onlyAgreement","custom:note":" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount","details":"Make liquidation payouts (v2)","params":{"id":"Agreement ID","liquidationTypeData":"Data regarding the version of the liquidation schema and the type","liquidatorAccount":"Address of the executor of the liquidation","rewardAmount":"The amount the rewarded account will receive","targetAccount":"Account to be liquidated","targetAccountBalanceDelta":"The delta amount the target account balance should change by","useDefaultRewardAccount":"Whether or not the default reward account receives the rewardAmount"}},"realtimeBalanceOf(address,uint256)":{"details":"Calculate the real balance of a user, taking in consideration all agreements of the account","params":{"account":"for the query","timestamp":"Time of balance"},"returns":{"availableBalance":"Real-time balance","deposit":"Account deposit","owedDeposit":"Account owed Deposit"}},"realtimeBalanceOfNow(address)":{"details":"realtimeBalanceOf with timestamp equals to block timestamp","params":{"account":"for the query"},"returns":{"availableBalance":"Real-time balance","deposit":"Account deposit","owedDeposit":"Account owed Deposit"}},"settleBalance(address,int256)":{"custom:modifiers":"  - onlyAgreement","details":"The agreement needs to make sure that the balance delta is balanced afterwards","params":{"account":"Account to query.","delta":"Amount of balance delta to be settled"}},"terminateAgreement(bytes32,uint256)":{"details":"Close the agreement","params":{"id":"Agreement ID"}},"updateAgreementData(bytes32,bytes32[])":{"details":"Create a new agreement","params":{"data":"Agreement data","id":"Agreement ID"}},"updateAgreementStateSlot(address,uint256,bytes32[])":{"custom:note":" - To clear the storage out, provide zero-ed array of intended length","details":"Update agreement state slot","params":{"account":"Account to be updated"}}},"version":1},"userdoc":{"kind":"user","methods":{"getAccountActiveAgreements(address)":{"notice":"Get a list of agreements that is active for the account"},"isAccountCritical(address,uint256)":{"notice":"Check if account is critical"},"isAccountCriticalNow(address)":{"notice":"Check if account is critical now (current host.getNow())"},"isAccountSolvent(address,uint256)":{"notice":"Check if account is solvent"},"isAccountSolventNow(address)":{"notice":"Check if account is solvent now"},"realtimeBalanceOfNow(address)":{"notice":"Calculate the realtime balance given the current host.getNow() value"},"settleBalance(address,int256)":{"notice":"Settle balance from an account by the agreement"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@superfluid-finance/=lib/superfluid-protocol-monorepo/packages/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol":"ISuperfluidToken"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol":{"keccak256":"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee","urls":["bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06","dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"],"license":"MIT"},"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol":{"keccak256":"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf","urls":["bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1","dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol","id":69788,"exportedSymbols":{"ISuperAgreement":[67972],"ISuperfluidToken":[69787]},"nodeType":"SourceUnit","src":"32:15185:93","nodes":[{"id":69502,"nodeType":"PragmaDirective","src":"32:26:93","nodes":[],"literals":["solidity",">=","0.8",".11"]},{"id":69504,"nodeType":"ImportDirective","src":"60:56:93","nodes":[],"absolutePath":"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol","file":"./ISuperAgreement.sol","nameLocation":"-1:-1:-1","scope":69788,"sourceUnit":67973,"symbolAliases":[{"foreign":{"id":69503,"name":"ISuperAgreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67972,"src":"69:15:93","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":69787,"nodeType":"ContractDefinition","src":"185:15031:93","nodes":[{"id":69507,"nodeType":"ErrorDefinition","src":"393:42:93","nodes":[],"errorSelector":"f05521f6","name":"SF_TOKEN_AGREEMENT_ALREADY_EXISTS","nameLocation":"399:33:93","parameters":{"id":69506,"nodeType":"ParameterList","parameters":[],"src":"432:2:93"}},{"id":69509,"nodeType":"ErrorDefinition","src":"455:42:93","nodes":[],"errorSelector":"dae18809","name":"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST","nameLocation":"461:33:93","parameters":{"id":69508,"nodeType":"ParameterList","parameters":[],"src":"494:2:93"}},{"id":69511,"nodeType":"ErrorDefinition","src":"517:43:93","nodes":[],"errorSelector":"10ecdf44","name":"SF_TOKEN_BURN_INSUFFICIENT_BALANCE","nameLocation":"523:34:93","parameters":{"id":69510,"nodeType":"ParameterList","parameters":[],"src":"557:2:93"}},{"id":69513,"nodeType":"ErrorDefinition","src":"579:43:93","nodes":[],"errorSelector":"2f4cb941","name":"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE","nameLocation":"585:34:93","parameters":{"id":69512,"nodeType":"ParameterList","parameters":[],"src":"619:2:93"}},{"id":69515,"nodeType":"ErrorDefinition","src":"641:39:93","nodes":[],"errorSelector":"c9ff6644","name":"SF_TOKEN_ONLY_LISTED_AGREEMENT","nameLocation":"647:30:93","parameters":{"id":69514,"nodeType":"ParameterList","parameters":[],"src":"677:2:93"}},{"id":69517,"nodeType":"ErrorDefinition","src":"703:27:93","nodes":[],"errorSelector":"c51efddd","name":"SF_TOKEN_ONLY_HOST","nameLocation":"709:18:93","parameters":{"id":69516,"nodeType":"ParameterList","parameters":[],"src":"727:2:93"}},{"id":69523,"nodeType":"FunctionDefinition","src":"1017:55:93","nodes":[],"documentation":{"id":69518,"nodeType":"StructuredDocumentation","src":"952:60:93","text":" @dev Get superfluid host contract address"},"functionSelector":"20bc4425","implemented":false,"kind":"function","modifiers":[],"name":"getHost","nameLocation":"1026:7:93","parameters":{"id":69519,"nodeType":"ParameterList","parameters":[],"src":"1033:2:93"},"returnParameters":{"id":69522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69521,"mutability":"mutable","name":"host","nameLocation":"1066:4:93","nodeType":"VariableDeclaration","scope":69523,"src":"1058:12:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69520,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1057:14:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69529,"nodeType":"StructDefinition","src":"1460:90:93","nodes":[],"canonicalName":"ISuperfluidToken.LiquidationTypeData","documentation":{"id":69524,"nodeType":"StructuredDocumentation","src":"1078:377:93","text":" @dev Encoded liquidation type data mainly used for handling stack to deep errors\n @custom:note \n - version: 1\n - liquidationType key:\n    - 0 = reward account receives reward (PIC period)\n    - 1 = liquidator account receives reward (Pleb period)\n    - 2 = liquidator account receives reward (Pirate period/bailout)"},"members":[{"constant":false,"id":69526,"mutability":"mutable","name":"version","nameLocation":"1505:7:93","nodeType":"VariableDeclaration","scope":69529,"src":"1497:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69528,"mutability":"mutable","name":"liquidationType","nameLocation":"1528:15:93","nodeType":"VariableDeclaration","scope":69529,"src":"1522:21:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":69527,"name":"uint8","nodeType":"ElementaryTypeName","src":"1522:5:93","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"LiquidationTypeData","nameLocation":"1467:19:93","scope":69787,"visibility":"public"},{"id":69543,"nodeType":"FunctionDefinition","src":"2078:222:93","nodes":[],"documentation":{"id":69530,"nodeType":"StructuredDocumentation","src":"1752:321:93","text":" @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"},"functionSelector":"eb3537cc","implemented":false,"kind":"function","modifiers":[],"name":"realtimeBalanceOf","nameLocation":"2087:17:93","parameters":{"id":69535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69532,"mutability":"mutable","name":"account","nameLocation":"2121:7:93","nodeType":"VariableDeclaration","scope":69543,"src":"2113:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69531,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69534,"mutability":"mutable","name":"timestamp","nameLocation":"2145:9:93","nodeType":"VariableDeclaration","scope":69543,"src":"2137:17:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2104:56:93"},"returnParameters":{"id":69542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69537,"mutability":"mutable","name":"availableBalance","nameLocation":"2220:16:93","nodeType":"VariableDeclaration","scope":69543,"src":"2213:23:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":69536,"name":"int256","nodeType":"ElementaryTypeName","src":"2213:6:93","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":69539,"mutability":"mutable","name":"deposit","nameLocation":"2258:7:93","nodeType":"VariableDeclaration","scope":69543,"src":"2250:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69541,"mutability":"mutable","name":"owedDeposit","nameLocation":"2287:11:93","nodeType":"VariableDeclaration","scope":69543,"src":"2279:19:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2279:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2199:100:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69557,"nodeType":"FunctionDefinition","src":"2650:230:93","nodes":[],"documentation":{"id":69544,"nodeType":"StructuredDocumentation","src":"2306:339:93","text":" @notice Calculate the realtime balance given the current host.getNow() value\n @dev realtimeBalanceOf with timestamp equals to block timestamp\n @param account for the query\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"},"functionSelector":"2ec8eec7","implemented":false,"kind":"function","modifiers":[],"name":"realtimeBalanceOfNow","nameLocation":"2659:20:93","parameters":{"id":69547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69546,"mutability":"mutable","name":"account","nameLocation":"2696:7:93","nodeType":"VariableDeclaration","scope":69557,"src":"2688:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69545,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2679:30:93"},"returnParameters":{"id":69556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69549,"mutability":"mutable","name":"availableBalance","nameLocation":"2769:16:93","nodeType":"VariableDeclaration","scope":69557,"src":"2762:23:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":69548,"name":"int256","nodeType":"ElementaryTypeName","src":"2762:6:93","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":69551,"mutability":"mutable","name":"deposit","nameLocation":"2807:7:93","nodeType":"VariableDeclaration","scope":69557,"src":"2799:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69553,"mutability":"mutable","name":"owedDeposit","nameLocation":"2836:11:93","nodeType":"VariableDeclaration","scope":69557,"src":"2828:19:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2828:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69555,"mutability":"mutable","name":"timestamp","nameLocation":"2869:9:93","nodeType":"VariableDeclaration","scope":69557,"src":"2861:17:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2748:131:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69567,"nodeType":"FunctionDefinition","src":"3200:140:93","nodes":[],"documentation":{"id":69558,"nodeType":"StructuredDocumentation","src":"2886:309:93","text":" @notice Check if account is critical\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @param timestamp The time we'd like to check if the account is critical (should use future)\n @return isCritical Whether the account is critical"},"functionSelector":"d9d078d6","implemented":false,"kind":"function","modifiers":[],"name":"isAccountCritical","nameLocation":"3209:17:93","parameters":{"id":69563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69560,"mutability":"mutable","name":"account","nameLocation":"3244:7:93","nodeType":"VariableDeclaration","scope":69567,"src":"3236:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69559,"name":"address","nodeType":"ElementaryTypeName","src":"3236:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69562,"mutability":"mutable","name":"timestamp","nameLocation":"3269:9:93","nodeType":"VariableDeclaration","scope":69567,"src":"3261:17:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3226:58:93"},"returnParameters":{"id":69566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69565,"mutability":"mutable","name":"isCritical","nameLocation":"3328:10:93","nodeType":"VariableDeclaration","scope":69567,"src":"3323:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69564,"name":"bool","nodeType":"ElementaryTypeName","src":"3323:4:93","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3322:17:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69575,"nodeType":"FunctionDefinition","src":"3590:116:93","nodes":[],"documentation":{"id":69568,"nodeType":"StructuredDocumentation","src":"3346:239:93","text":" @notice Check if account is critical now (current host.getNow())\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @return isCritical Whether the account is critical"},"functionSelector":"79359f6f","implemented":false,"kind":"function","modifiers":[],"name":"isAccountCriticalNow","nameLocation":"3599:20:93","parameters":{"id":69571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69570,"mutability":"mutable","name":"account","nameLocation":"3637:7:93","nodeType":"VariableDeclaration","scope":69575,"src":"3629:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69569,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3619:31:93"},"returnParameters":{"id":69574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69573,"mutability":"mutable","name":"isCritical","nameLocation":"3694:10:93","nodeType":"VariableDeclaration","scope":69575,"src":"3689:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69572,"name":"bool","nodeType":"ElementaryTypeName","src":"3689:4:93","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3688:17:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69585,"nodeType":"FunctionDefinition","src":"4100:138:93","nodes":[],"documentation":{"id":69576,"nodeType":"StructuredDocumentation","src":"3712:383:93","text":" @notice Check if account is solvent\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @param timestamp The time we'd like to check if the account is solvent (should use future)\n @return isSolvent True if the account is solvent, false otherwise"},"functionSelector":"b84cdd4a","implemented":false,"kind":"function","modifiers":[],"name":"isAccountSolvent","nameLocation":"4109:16:93","parameters":{"id":69581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69578,"mutability":"mutable","name":"account","nameLocation":"4143:7:93","nodeType":"VariableDeclaration","scope":69585,"src":"4135:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69577,"name":"address","nodeType":"ElementaryTypeName","src":"4135:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69580,"mutability":"mutable","name":"timestamp","nameLocation":"4168:9:93","nodeType":"VariableDeclaration","scope":69585,"src":"4160:17:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69579,"name":"uint256","nodeType":"ElementaryTypeName","src":"4160:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4125:58:93"},"returnParameters":{"id":69584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69583,"mutability":"mutable","name":"isSolvent","nameLocation":"4227:9:93","nodeType":"VariableDeclaration","scope":69585,"src":"4222:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69582,"name":"bool","nodeType":"ElementaryTypeName","src":"4222:4:93","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4221:16:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69593,"nodeType":"FunctionDefinition","src":"4538:114:93","nodes":[],"documentation":{"id":69586,"nodeType":"StructuredDocumentation","src":"4244:289:93","text":" @notice Check if account is solvent now\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @return isSolvent True if the account is solvent, false otherwise"},"functionSelector":"bb0d196e","implemented":false,"kind":"function","modifiers":[],"name":"isAccountSolventNow","nameLocation":"4547:19:93","parameters":{"id":69589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69588,"mutability":"mutable","name":"account","nameLocation":"4584:7:93","nodeType":"VariableDeclaration","scope":69593,"src":"4576:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69587,"name":"address","nodeType":"ElementaryTypeName","src":"4576:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4566:31:93"},"returnParameters":{"id":69592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69591,"mutability":"mutable","name":"isSolvent","nameLocation":"4641:9:93","nodeType":"VariableDeclaration","scope":69593,"src":"4636:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69590,"name":"bool","nodeType":"ElementaryTypeName","src":"4636:4:93","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4635:16:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69603,"nodeType":"FunctionDefinition","src":"4940:132:93","nodes":[],"documentation":{"id":69594,"nodeType":"StructuredDocumentation","src":"4658:277:93","text":" @notice Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"},"functionSelector":"386fa221","implemented":false,"kind":"function","modifiers":[],"name":"getAccountActiveAgreements","nameLocation":"4949:26:93","parameters":{"id":69597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69596,"mutability":"mutable","name":"account","nameLocation":"4984:7:93","nodeType":"VariableDeclaration","scope":69603,"src":"4976:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69595,"name":"address","nodeType":"ElementaryTypeName","src":"4976:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4975:17:93"},"returnParameters":{"id":69602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69601,"mutability":"mutable","name":"activeAgreements","nameLocation":"5054:16:93","nodeType":"VariableDeclaration","scope":69603,"src":"5029:41:93","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_ISuperAgreement_$67972_$dyn_memory_ptr","typeString":"contract ISuperAgreement[]"},"typeName":{"baseType":{"id":69599,"nodeType":"UserDefinedTypeName","pathNode":{"id":69598,"name":"ISuperAgreement","nameLocations":["5029:15:93"],"nodeType":"IdentifierPath","referencedDeclaration":67972,"src":"5029:15:93"},"referencedDeclaration":67972,"src":"5029:15:93","typeDescriptions":{"typeIdentifier":"t_contract$_ISuperAgreement_$67972","typeString":"contract ISuperAgreement"}},"id":69600,"nodeType":"ArrayTypeName","src":"5029:17:93","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_ISuperAgreement_$67972_$dyn_storage_ptr","typeString":"contract ISuperAgreement[]"}},"visibility":"internal"}],"src":"5028:43:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69612,"nodeType":"FunctionDefinition","src":"5393:101:93","nodes":[],"documentation":{"id":69604,"nodeType":"StructuredDocumentation","src":"5278:110:93","text":" @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"},"functionSelector":"12a6a3f8","implemented":false,"kind":"function","modifiers":[],"name":"createAgreement","nameLocation":"5402:15:93","parameters":{"id":69610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69606,"mutability":"mutable","name":"id","nameLocation":"5435:2:93","nodeType":"VariableDeclaration","scope":69612,"src":"5427:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5427:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69609,"mutability":"mutable","name":"data","nameLocation":"5466:4:93","nodeType":"VariableDeclaration","scope":69612,"src":"5447:23:93","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5447:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69608,"nodeType":"ArrayTypeName","src":"5447:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5417:59:93"},"returnParameters":{"id":69611,"nodeType":"ParameterList","parameters":[],"src":"5493:0:93"},"scope":69787,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":69622,"nodeType":"EventDefinition","src":"5678:113:93","nodes":[],"anonymous":false,"documentation":{"id":69613,"nodeType":"StructuredDocumentation","src":"5499:174:93","text":" @dev Agreement created event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"},"eventSelector":"770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d","name":"AgreementCreated","nameLocation":"5684:16:93","parameters":{"id":69621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69615,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"5726:14:93","nodeType":"VariableDeclaration","scope":69622,"src":"5710:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69614,"name":"address","nodeType":"ElementaryTypeName","src":"5710:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69617,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"5758:2:93","nodeType":"VariableDeclaration","scope":69622,"src":"5750:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5750:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69620,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"5780:4:93","nodeType":"VariableDeclaration","scope":69622,"src":"5770:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5770:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69619,"nodeType":"ArrayTypeName","src":"5770:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5700:90:93"}},{"id":69635,"nodeType":"FunctionDefinition","src":"5986:170:93","nodes":[],"documentation":{"id":69623,"nodeType":"StructuredDocumentation","src":"5797:184:93","text":" @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"},"functionSelector":"6c2d9f2f","implemented":false,"kind":"function","modifiers":[],"name":"getAgreementData","nameLocation":"5995:16:93","parameters":{"id":69630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69625,"mutability":"mutable","name":"agreementClass","nameLocation":"6029:14:93","nodeType":"VariableDeclaration","scope":69635,"src":"6021:22:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69624,"name":"address","nodeType":"ElementaryTypeName","src":"6021:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69627,"mutability":"mutable","name":"id","nameLocation":"6061:2:93","nodeType":"VariableDeclaration","scope":69635,"src":"6053:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6053:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69629,"mutability":"mutable","name":"dataLength","nameLocation":"6078:10:93","nodeType":"VariableDeclaration","scope":69635,"src":"6073:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69628,"name":"uint","nodeType":"ElementaryTypeName","src":"6073:4:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6011:83:93"},"returnParameters":{"id":69634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69633,"mutability":"mutable","name":"data","nameLocation":"6150:4:93","nodeType":"VariableDeclaration","scope":69635,"src":"6133:21:93","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6133:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69632,"nodeType":"ArrayTypeName","src":"6133:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6132:23:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69644,"nodeType":"FunctionDefinition","src":"6277:105:93","nodes":[],"documentation":{"id":69636,"nodeType":"StructuredDocumentation","src":"6162:110:93","text":" @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"},"functionSelector":"a1b2bf8b","implemented":false,"kind":"function","modifiers":[],"name":"updateAgreementData","nameLocation":"6286:19:93","parameters":{"id":69642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69638,"mutability":"mutable","name":"id","nameLocation":"6323:2:93","nodeType":"VariableDeclaration","scope":69644,"src":"6315:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6315:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69641,"mutability":"mutable","name":"data","nameLocation":"6354:4:93","nodeType":"VariableDeclaration","scope":69644,"src":"6335:23:93","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6335:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69640,"nodeType":"ArrayTypeName","src":"6335:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6305:59:93"},"returnParameters":{"id":69643,"nodeType":"ParameterList","parameters":[],"src":"6381:0:93"},"scope":69787,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":69654,"nodeType":"EventDefinition","src":"6566:113:93","nodes":[],"anonymous":false,"documentation":{"id":69645,"nodeType":"StructuredDocumentation","src":"6387:174:93","text":" @dev Agreement updated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"},"eventSelector":"0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca","name":"AgreementUpdated","nameLocation":"6572:16:93","parameters":{"id":69653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69647,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"6614:14:93","nodeType":"VariableDeclaration","scope":69654,"src":"6598:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69646,"name":"address","nodeType":"ElementaryTypeName","src":"6598:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69649,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"6646:2:93","nodeType":"VariableDeclaration","scope":69654,"src":"6638:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69652,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"6668:4:93","nodeType":"VariableDeclaration","scope":69654,"src":"6658:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6658:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69651,"nodeType":"ArrayTypeName","src":"6658:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6588:90:93"}},{"id":69662,"nodeType":"FunctionDefinition","src":"6763:96:93","nodes":[],"documentation":{"id":69655,"nodeType":"StructuredDocumentation","src":"6685:73:93","text":" @dev Close the agreement\n @param id Agreement ID"},"functionSelector":"27048397","implemented":false,"kind":"function","modifiers":[],"name":"terminateAgreement","nameLocation":"6772:18:93","parameters":{"id":69660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69657,"mutability":"mutable","name":"id","nameLocation":"6808:2:93","nodeType":"VariableDeclaration","scope":69662,"src":"6800:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6800:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69659,"mutability":"mutable","name":"dataLength","nameLocation":"6825:10:93","nodeType":"VariableDeclaration","scope":69662,"src":"6820:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69658,"name":"uint","nodeType":"ElementaryTypeName","src":"6820:4:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6790:51:93"},"returnParameters":{"id":69661,"nodeType":"ParameterList","parameters":[],"src":"6858:0:93"},"scope":69787,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":69669,"nodeType":"EventDefinition","src":"7012:92:93","nodes":[],"anonymous":false,"documentation":{"id":69663,"nodeType":"StructuredDocumentation","src":"6864:143:93","text":" @dev Agreement terminated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"},"eventSelector":"71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b","name":"AgreementTerminated","nameLocation":"7018:19:93","parameters":{"id":69668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69665,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"7063:14:93","nodeType":"VariableDeclaration","scope":69669,"src":"7047:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69664,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69667,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"7095:2:93","nodeType":"VariableDeclaration","scope":69669,"src":"7087:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7087:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7037:66:93"}},{"id":69680,"nodeType":"FunctionDefinition","src":"7314:143:93","nodes":[],"documentation":{"id":69670,"nodeType":"StructuredDocumentation","src":"7110:199:93","text":" @dev Update agreement state slot\n @param account Account to be updated\n @custom:note \n - To clear the storage out, provide zero-ed array of intended length"},"functionSelector":"090c415e","implemented":false,"kind":"function","modifiers":[],"name":"updateAgreementStateSlot","nameLocation":"7323:24:93","parameters":{"id":69678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69672,"mutability":"mutable","name":"account","nameLocation":"7365:7:93","nodeType":"VariableDeclaration","scope":69680,"src":"7357:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69671,"name":"address","nodeType":"ElementaryTypeName","src":"7357:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69674,"mutability":"mutable","name":"slotId","nameLocation":"7390:6:93","nodeType":"VariableDeclaration","scope":69680,"src":"7382:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69673,"name":"uint256","nodeType":"ElementaryTypeName","src":"7382:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69677,"mutability":"mutable","name":"slotData","nameLocation":"7425:8:93","nodeType":"VariableDeclaration","scope":69680,"src":"7406:27:93","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7406:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69676,"nodeType":"ArrayTypeName","src":"7406:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7347:92:93"},"returnParameters":{"id":69679,"nodeType":"ParameterList","parameters":[],"src":"7456:0:93"},"scope":69787,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":69689,"nodeType":"EventDefinition","src":"7681:131:93","nodes":[],"anonymous":false,"documentation":{"id":69681,"nodeType":"StructuredDocumentation","src":"7462:214:93","text":" @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"},"eventSelector":"30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d5985","name":"AgreementStateUpdated","nameLocation":"7687:21:93","parameters":{"id":69688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69683,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"7734:14:93","nodeType":"VariableDeclaration","scope":69689,"src":"7718:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69682,"name":"address","nodeType":"ElementaryTypeName","src":"7718:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69685,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"7774:7:93","nodeType":"VariableDeclaration","scope":69689,"src":"7758:23:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69684,"name":"address","nodeType":"ElementaryTypeName","src":"7758:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69687,"indexed":false,"mutability":"mutable","name":"slotId","nameLocation":"7799:6:93","nodeType":"VariableDeclaration","scope":69689,"src":"7791:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7791:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7708:103:93"}},{"id":69704,"nodeType":"FunctionDefinition","src":"8090:209:93","nodes":[],"documentation":{"id":69690,"nodeType":"StructuredDocumentation","src":"7818:267:93","text":" @dev Get data of the slot of the state of an agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"},"functionSelector":"4b61cc33","implemented":false,"kind":"function","modifiers":[],"name":"getAgreementStateSlot","nameLocation":"8099:21:93","parameters":{"id":69699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69692,"mutability":"mutable","name":"agreementClass","nameLocation":"8138:14:93","nodeType":"VariableDeclaration","scope":69704,"src":"8130:22:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69691,"name":"address","nodeType":"ElementaryTypeName","src":"8130:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69694,"mutability":"mutable","name":"account","nameLocation":"8170:7:93","nodeType":"VariableDeclaration","scope":69704,"src":"8162:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69693,"name":"address","nodeType":"ElementaryTypeName","src":"8162:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69696,"mutability":"mutable","name":"slotId","nameLocation":"8195:6:93","nodeType":"VariableDeclaration","scope":69704,"src":"8187:14:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69695,"name":"uint256","nodeType":"ElementaryTypeName","src":"8187:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69698,"mutability":"mutable","name":"dataLength","nameLocation":"8216:10:93","nodeType":"VariableDeclaration","scope":69704,"src":"8211:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69697,"name":"uint","nodeType":"ElementaryTypeName","src":"8211:4:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8120:112:93"},"returnParameters":{"id":69703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69702,"mutability":"mutable","name":"slotData","nameLocation":"8289:8:93","nodeType":"VariableDeclaration","scope":69704,"src":"8272:25:93","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":69700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8272:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":69701,"nodeType":"ArrayTypeName","src":"8272:9:93","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8271:27:93"},"scope":69787,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":69712,"nodeType":"FunctionDefinition","src":"8630:93:93","nodes":[],"documentation":{"id":69705,"nodeType":"StructuredDocumentation","src":"8305:320:93","text":" @notice Settle balance from an account by the agreement\n @dev The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n @custom:modifiers \n  - onlyAgreement"},"functionSelector":"cf97256d","implemented":false,"kind":"function","modifiers":[],"name":"settleBalance","nameLocation":"8639:13:93","parameters":{"id":69710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69707,"mutability":"mutable","name":"account","nameLocation":"8670:7:93","nodeType":"VariableDeclaration","scope":69712,"src":"8662:15:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69706,"name":"address","nodeType":"ElementaryTypeName","src":"8662:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69709,"mutability":"mutable","name":"delta","nameLocation":"8694:5:93","nodeType":"VariableDeclaration","scope":69712,"src":"8687:12:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":69708,"name":"int256","nodeType":"ElementaryTypeName","src":"8687:6:93","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8652:53:93"},"returnParameters":{"id":69711,"nodeType":"ParameterList","parameters":[],"src":"8722:0:93"},"scope":69787,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":69730,"nodeType":"FunctionDefinition","src":"9888:292:93","nodes":[],"documentation":{"id":69713,"nodeType":"StructuredDocumentation","src":"8729:1154:93","text":" @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account to be liquidated\n @param rewardAmount The amount the rewarded account will receive\n @param targetAccountBalanceDelta The delta amount the target account balance should change by\n @custom:note \n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n @custom:modifiers \n  - onlyAgreement"},"functionSelector":"1863e809","implemented":false,"kind":"function","modifiers":[],"name":"makeLiquidationPayoutsV2","nameLocation":"9897:24:93","parameters":{"id":69728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69715,"mutability":"mutable","name":"id","nameLocation":"9944:2:93","nodeType":"VariableDeclaration","scope":69730,"src":"9936:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9936:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69717,"mutability":"mutable","name":"liquidationTypeData","nameLocation":"9969:19:93","nodeType":"VariableDeclaration","scope":69730,"src":"9956:32:93","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":69716,"name":"bytes","nodeType":"ElementaryTypeName","src":"9956:5:93","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":69719,"mutability":"mutable","name":"liquidatorAccount","nameLocation":"10006:17:93","nodeType":"VariableDeclaration","scope":69730,"src":"9998:25:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69718,"name":"address","nodeType":"ElementaryTypeName","src":"9998:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69721,"mutability":"mutable","name":"useDefaultRewardAccount","nameLocation":"10038:23:93","nodeType":"VariableDeclaration","scope":69730,"src":"10033:28:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69720,"name":"bool","nodeType":"ElementaryTypeName","src":"10033:4:93","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":69723,"mutability":"mutable","name":"targetAccount","nameLocation":"10079:13:93","nodeType":"VariableDeclaration","scope":69730,"src":"10071:21:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69722,"name":"address","nodeType":"ElementaryTypeName","src":"10071:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69725,"mutability":"mutable","name":"rewardAmount","nameLocation":"10110:12:93","nodeType":"VariableDeclaration","scope":69730,"src":"10102:20:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69724,"name":"uint256","nodeType":"ElementaryTypeName","src":"10102:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69727,"mutability":"mutable","name":"targetAccountBalanceDelta","nameLocation":"10139:25:93","nodeType":"VariableDeclaration","scope":69730,"src":"10132:32:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":69726,"name":"int256","nodeType":"ElementaryTypeName","src":"10132:6:93","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9926:244:93"},"returnParameters":{"id":69729,"nodeType":"ParameterList","parameters":[],"src":"10179:0:93"},"scope":69787,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":69749,"nodeType":"EventDefinition","src":"11702:321:93","nodes":[],"anonymous":false,"documentation":{"id":69731,"nodeType":"StructuredDocumentation","src":"10185:1512:93","text":" @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAmountReceiver Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n @custom:note \n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"},"eventSelector":"b8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f","name":"AgreementLiquidatedV2","nameLocation":"11708:21:93","parameters":{"id":69748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69733,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"11755:14:93","nodeType":"VariableDeclaration","scope":69749,"src":"11739:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69732,"name":"address","nodeType":"ElementaryTypeName","src":"11739:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69735,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"11787:2:93","nodeType":"VariableDeclaration","scope":69749,"src":"11779:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11779:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69737,"indexed":true,"mutability":"mutable","name":"liquidatorAccount","nameLocation":"11815:17:93","nodeType":"VariableDeclaration","scope":69749,"src":"11799:33:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69736,"name":"address","nodeType":"ElementaryTypeName","src":"11799:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69739,"indexed":true,"mutability":"mutable","name":"targetAccount","nameLocation":"11858:13:93","nodeType":"VariableDeclaration","scope":69749,"src":"11842:29:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69738,"name":"address","nodeType":"ElementaryTypeName","src":"11842:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69741,"indexed":false,"mutability":"mutable","name":"rewardAmountReceiver","nameLocation":"11889:20:93","nodeType":"VariableDeclaration","scope":69749,"src":"11881:28:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69740,"name":"address","nodeType":"ElementaryTypeName","src":"11881:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69743,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"11927:12:93","nodeType":"VariableDeclaration","scope":69749,"src":"11919:20:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69742,"name":"uint256","nodeType":"ElementaryTypeName","src":"11919:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69745,"indexed":false,"mutability":"mutable","name":"targetAccountBalanceDelta","nameLocation":"11956:25:93","nodeType":"VariableDeclaration","scope":69749,"src":"11949:32:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":69744,"name":"int256","nodeType":"ElementaryTypeName","src":"11949:6:93","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":69747,"indexed":false,"mutability":"mutable","name":"liquidationTypeData","nameLocation":"11997:19:93","nodeType":"VariableDeclaration","scope":69749,"src":"11991:25:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":69746,"name":"bytes","nodeType":"ElementaryTypeName","src":"11991:5:93","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11729:293:93"}},{"id":69762,"nodeType":"EventDefinition","src":"13275:201:93","nodes":[],"anonymous":false,"documentation":{"id":69750,"nodeType":"StructuredDocumentation","src":"12835:435:93","text":" @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward\n @custom:deprecated Use AgreementLiquidatedV2 instead"},"eventSelector":"8505c3d8f1f184f032cf0bc4cd80ee61c8b9d94f8907c3281bf0101a2610fe80","name":"AgreementLiquidated","nameLocation":"13281:19:93","parameters":{"id":69761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69752,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"13326:14:93","nodeType":"VariableDeclaration","scope":69762,"src":"13310:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69751,"name":"address","nodeType":"ElementaryTypeName","src":"13310:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69754,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"13358:2:93","nodeType":"VariableDeclaration","scope":69762,"src":"13350:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13350:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69756,"indexed":true,"mutability":"mutable","name":"penaltyAccount","nameLocation":"13386:14:93","nodeType":"VariableDeclaration","scope":69762,"src":"13370:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69755,"name":"address","nodeType":"ElementaryTypeName","src":"13370:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69758,"indexed":true,"mutability":"mutable","name":"rewardAccount","nameLocation":"13426:13:93","nodeType":"VariableDeclaration","scope":69762,"src":"13410:29:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69757,"name":"address","nodeType":"ElementaryTypeName","src":"13410:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69760,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"13457:12:93","nodeType":"VariableDeclaration","scope":69762,"src":"13449:20:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69759,"name":"uint256","nodeType":"ElementaryTypeName","src":"13449:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13300:175:93"}},{"id":69769,"nodeType":"EventDefinition","src":"13763:91:93","nodes":[],"anonymous":false,"documentation":{"id":69763,"nodeType":"StructuredDocumentation","src":"13482:276:93","text":" @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout\n @custom:deprecated Use AgreementLiquidatedV2 instead"},"eventSelector":"d6c9a04afc81e8c614310bbee6c9e84f5abe15b82038bf8347014ce0852e6ffd","name":"Bailout","nameLocation":"13769:7:93","parameters":{"id":69768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69765,"indexed":true,"mutability":"mutable","name":"bailoutAccount","nameLocation":"13802:14:93","nodeType":"VariableDeclaration","scope":69769,"src":"13786:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69764,"name":"address","nodeType":"ElementaryTypeName","src":"13786:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69767,"indexed":false,"mutability":"mutable","name":"bailoutAmount","nameLocation":"13834:13:93","nodeType":"VariableDeclaration","scope":69769,"src":"13826:21:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69766,"name":"uint256","nodeType":"ElementaryTypeName","src":"13826:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13776:77:93"}},{"id":69786,"nodeType":"EventDefinition","src":"14947:267:93","nodes":[],"anonymous":false,"documentation":{"id":69770,"nodeType":"StructuredDocumentation","src":"13860:1082:93","text":" @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n @custom:deprecated Use AgreementLiquidatedV2 instead\n @custom:note \n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."},"eventSelector":"5f22b60e58b1d6de858bc27c48d5a4653e052da99e083c1d88bb8c58e1abc8ef","name":"AgreementLiquidatedBy","nameLocation":"14953:21:93","parameters":{"id":69785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69772,"indexed":false,"mutability":"mutable","name":"liquidatorAccount","nameLocation":"14992:17:93","nodeType":"VariableDeclaration","scope":69786,"src":"14984:25:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69771,"name":"address","nodeType":"ElementaryTypeName","src":"14984:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69774,"indexed":true,"mutability":"mutable","name":"agreementClass","nameLocation":"15035:14:93","nodeType":"VariableDeclaration","scope":69786,"src":"15019:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69773,"name":"address","nodeType":"ElementaryTypeName","src":"15019:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69776,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"15067:2:93","nodeType":"VariableDeclaration","scope":69786,"src":"15059:10:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":69775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15059:7:93","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":69778,"indexed":true,"mutability":"mutable","name":"penaltyAccount","nameLocation":"15095:14:93","nodeType":"VariableDeclaration","scope":69786,"src":"15079:30:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69777,"name":"address","nodeType":"ElementaryTypeName","src":"15079:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69780,"indexed":true,"mutability":"mutable","name":"bondAccount","nameLocation":"15135:11:93","nodeType":"VariableDeclaration","scope":69786,"src":"15119:27:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69779,"name":"address","nodeType":"ElementaryTypeName","src":"15119:7:93","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69782,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"15164:12:93","nodeType":"VariableDeclaration","scope":69786,"src":"15156:20:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69781,"name":"uint256","nodeType":"ElementaryTypeName","src":"15156:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69784,"indexed":false,"mutability":"mutable","name":"bailoutAmount","nameLocation":"15194:13:93","nodeType":"VariableDeclaration","scope":69786,"src":"15186:21:93","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69783,"name":"uint256","nodeType":"ElementaryTypeName","src":"15186:7:93","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14974:239:93"}}],"abstract":false,"baseContracts":[],"canonicalName":"ISuperfluidToken","contractDependencies":[],"contractKind":"interface","documentation":{"id":69505,"nodeType":"StructuredDocumentation","src":"118:66:93","text":" @title Superfluid token interface\n @author Superfluid"},"fullyImplemented":false,"linearizedBaseContracts":[69787],"name":"ISuperfluidToken","nameLocation":"195:16:93","scope":69788,"usedErrors":[69507,69509,69511,69513,69515,69517],"usedEvents":[69622,69654,69669,69689,69749,69762,69769,69786]}],"license":"MIT"},"id":93}