{"abi":[{"type":"function","name":"authorizeOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"defaultOperators","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"granularity","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isOperatorFor","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"tokenHolder","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"operatorBurn","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operatorData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"operatorSend","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operatorData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"send","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"AuthorizedOperator","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"tokenHolder","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Burned","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"operatorData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"Minted","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"operatorData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RevokedOperator","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"tokenHolder","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Sent","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"operatorData","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"authorizeOperator(address)":"959b8c3f","balanceOf(address)":"70a08231","burn(uint256,bytes)":"fe9d9303","defaultOperators()":"06e48538","granularity()":"556f0dc7","isOperatorFor(address,address)":"d95b6371","name()":"06fdde03","operatorBurn(address,uint256,bytes,bytes)":"fc673c4f","operatorSend(address,address,uint256,bytes,bytes)":"62ad1b83","revokeOperator(address)":"fad8b32a","send(address,uint256,bytes)":"9bd9bbc6","symbol()":"95d89b41","totalSupply()":"18160ddd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/=lib/superfluid-protocol-monorepo/packages/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"tokenHolder","type":"address","indexed":true}],"type":"event","name":"AuthorizedOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"bytes","name":"operatorData","type":"bytes","indexed":false}],"type":"event","name":"Burned","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"bytes","name":"operatorData","type":"bytes","indexed":false}],"type":"event","name":"Minted","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"tokenHolder","type":"address","indexed":true}],"type":"event","name":"RevokedOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"bytes","name":"operatorData","type":"bytes","indexed":false}],"type":"event","name":"Sent","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"authorizeOperator"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultOperators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"granularity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"stateMutability":"view","type":"function","name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"operatorBurn"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"operatorSend"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeOperator"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"send"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"authorizeOperator(address)":{"details":"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by an account (`owner`)."},"burn(uint256,bytes)":{"details":"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."},"defaultOperators()":{"details":"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."},"granularity()":{"details":"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."},"isOperatorFor(address,address)":{"details":"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."},"name()":{"details":"Returns the name of the token."},"operatorBurn(address,uint256,bytes,bytes)":{"details":"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."},"operatorSend(address,address,uint256,bytes,bytes)":{"details":"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."},"revokeOperator(address)":{"details":"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."},"send(address,uint256,bytes)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the amount of tokens in existence."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@superfluid-finance/=lib/superfluid-protocol-monorepo/packages/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol":"IERC777"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol":{"keccak256":"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03","urls":["bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432","dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol","id":41987,"exportedSymbols":{"IERC777":[41986]},"nodeType":"SourceUnit","src":"108:6622:46","nodes":[{"id":41825,"nodeType":"PragmaDirective","src":"108:23:46","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":41986,"nodeType":"ContractDefinition","src":"506:6223:46","nodes":[{"id":41839,"nodeType":"EventDefinition","src":"734:107:46","nodes":[],"anonymous":false,"documentation":{"id":41827,"nodeType":"StructuredDocumentation","src":"530:199:46","text":" @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."},"eventSelector":"2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d","name":"Minted","nameLocation":"740:6:46","parameters":{"id":41838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41829,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"763:8:46","nodeType":"VariableDeclaration","scope":41839,"src":"747:24:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41828,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41831,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"789:2:46","nodeType":"VariableDeclaration","scope":41839,"src":"773:18:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41830,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41833,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"801:6:46","nodeType":"VariableDeclaration","scope":41839,"src":"793:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41832,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41835,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"815:4:46","nodeType":"VariableDeclaration","scope":41839,"src":"809:10:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41834,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41837,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"827:12:46","nodeType":"VariableDeclaration","scope":41839,"src":"821:18:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41836,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"746:94:46"}},{"id":41852,"nodeType":"EventDefinition","src":"1039:109:46","nodes":[],"anonymous":false,"documentation":{"id":41840,"nodeType":"StructuredDocumentation","src":"847:187:46","text":" @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."},"eventSelector":"a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098","name":"Burned","nameLocation":"1045:6:46","parameters":{"id":41851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41842,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1068:8:46","nodeType":"VariableDeclaration","scope":41852,"src":"1052:24:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41841,"name":"address","nodeType":"ElementaryTypeName","src":"1052:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41844,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1094:4:46","nodeType":"VariableDeclaration","scope":41852,"src":"1078:20:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41843,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41846,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1108:6:46","nodeType":"VariableDeclaration","scope":41852,"src":"1100:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41848,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1122:4:46","nodeType":"VariableDeclaration","scope":41852,"src":"1116:10:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41847,"name":"bytes","nodeType":"ElementaryTypeName","src":"1116:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41850,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"1134:12:46","nodeType":"VariableDeclaration","scope":41852,"src":"1128:18:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41849,"name":"bytes","nodeType":"ElementaryTypeName","src":"1128:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1051:96:46"}},{"id":41859,"nodeType":"EventDefinition","src":"1242:80:46","nodes":[],"anonymous":false,"documentation":{"id":41853,"nodeType":"StructuredDocumentation","src":"1154:83:46","text":" @dev Emitted when `operator` is made operator for `tokenHolder`."},"eventSelector":"f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9","name":"AuthorizedOperator","nameLocation":"1248:18:46","parameters":{"id":41858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41855,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1283:8:46","nodeType":"VariableDeclaration","scope":41859,"src":"1267:24:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41854,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41857,"indexed":true,"mutability":"mutable","name":"tokenHolder","nameLocation":"1309:11:46","nodeType":"VariableDeclaration","scope":41859,"src":"1293:27:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41856,"name":"address","nodeType":"ElementaryTypeName","src":"1293:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1266:55:46"}},{"id":41866,"nodeType":"EventDefinition","src":"1430:77:46","nodes":[],"anonymous":false,"documentation":{"id":41860,"nodeType":"StructuredDocumentation","src":"1328:97:46","text":" @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."},"eventSelector":"50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1","name":"RevokedOperator","nameLocation":"1436:15:46","parameters":{"id":41865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41862,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1468:8:46","nodeType":"VariableDeclaration","scope":41866,"src":"1452:24:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41861,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41864,"indexed":true,"mutability":"mutable","name":"tokenHolder","nameLocation":"1494:11:46","nodeType":"VariableDeclaration","scope":41866,"src":"1478:27:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41863,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1451:55:46"}},{"id":41872,"nodeType":"FunctionDefinition","src":"1572:54:46","nodes":[],"documentation":{"id":41867,"nodeType":"StructuredDocumentation","src":"1513:54:46","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"1581:4:46","parameters":{"id":41868,"nodeType":"ParameterList","parameters":[],"src":"1585:2:46"},"returnParameters":{"id":41871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41872,"src":"1611:13:46","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":41869,"name":"string","nodeType":"ElementaryTypeName","src":"1611:6:46","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1610:15:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41878,"nodeType":"FunctionDefinition","src":"1739:56:46","nodes":[],"documentation":{"id":41873,"nodeType":"StructuredDocumentation","src":"1632:102:46","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1748:6:46","parameters":{"id":41874,"nodeType":"ParameterList","parameters":[],"src":"1754:2:46"},"returnParameters":{"id":41877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41878,"src":"1780:13:46","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":41875,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:46","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41884,"nodeType":"FunctionDefinition","src":"2093:55:46","nodes":[],"documentation":{"id":41879,"nodeType":"StructuredDocumentation","src":"1801:287:46","text":" @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."},"functionSelector":"556f0dc7","implemented":false,"kind":"function","modifiers":[],"name":"granularity","nameLocation":"2102:11:46","parameters":{"id":41880,"nodeType":"ParameterList","parameters":[],"src":"2113:2:46"},"returnParameters":{"id":41883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41884,"src":"2139:7:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2138:9:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41890,"nodeType":"FunctionDefinition","src":"2225:55:46","nodes":[],"documentation":{"id":41885,"nodeType":"StructuredDocumentation","src":"2154:66:46","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2234:11:46","parameters":{"id":41886,"nodeType":"ParameterList","parameters":[],"src":"2245:2:46"},"returnParameters":{"id":41889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41890,"src":"2271:7:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41898,"nodeType":"FunctionDefinition","src":"2374:66:46","nodes":[],"documentation":{"id":41891,"nodeType":"StructuredDocumentation","src":"2286:83:46","text":" @dev Returns the amount of tokens owned by an account (`owner`)."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2383:9:46","parameters":{"id":41894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41893,"mutability":"mutable","name":"owner","nameLocation":"2401:5:46","nodeType":"VariableDeclaration","scope":41898,"src":"2393:13:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41892,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2392:15:46"},"returnParameters":{"id":41897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41898,"src":"2431:7:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2431:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:9:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41908,"nodeType":"FunctionDefinition","src":"3036:79:46","nodes":[],"documentation":{"id":41899,"nodeType":"StructuredDocumentation","src":"2446:585:46","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."},"functionSelector":"9bd9bbc6","implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"3045:4:46","parameters":{"id":41906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41901,"mutability":"mutable","name":"recipient","nameLocation":"3058:9:46","nodeType":"VariableDeclaration","scope":41908,"src":"3050:17:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41900,"name":"address","nodeType":"ElementaryTypeName","src":"3050:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41903,"mutability":"mutable","name":"amount","nameLocation":"3077:6:46","nodeType":"VariableDeclaration","scope":41908,"src":"3069:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41905,"mutability":"mutable","name":"data","nameLocation":"3100:4:46","nodeType":"VariableDeclaration","scope":41908,"src":"3085:19:46","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41904,"name":"bytes","nodeType":"ElementaryTypeName","src":"3085:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3049:56:46"},"returnParameters":{"id":41907,"nodeType":"ParameterList","parameters":[],"src":"3114:0:46"},"scope":41986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41916,"nodeType":"FunctionDefinition","src":"3530:60:46","nodes":[],"documentation":{"id":41909,"nodeType":"StructuredDocumentation","src":"3121:404:46","text":" @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."},"functionSelector":"fe9d9303","implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3539:4:46","parameters":{"id":41914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41911,"mutability":"mutable","name":"amount","nameLocation":"3552:6:46","nodeType":"VariableDeclaration","scope":41916,"src":"3544:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41913,"mutability":"mutable","name":"data","nameLocation":"3575:4:46","nodeType":"VariableDeclaration","scope":41916,"src":"3560:19:46","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41912,"name":"bytes","nodeType":"ElementaryTypeName","src":"3560:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3543:37:46"},"returnParameters":{"id":41915,"nodeType":"ParameterList","parameters":[],"src":"3589:0:46"},"scope":41986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41926,"nodeType":"FunctionDefinition","src":"3850:91:46","nodes":[],"documentation":{"id":41917,"nodeType":"StructuredDocumentation","src":"3596:249:46","text":" @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."},"functionSelector":"d95b6371","implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"3859:13:46","parameters":{"id":41922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41919,"mutability":"mutable","name":"operator","nameLocation":"3881:8:46","nodeType":"VariableDeclaration","scope":41926,"src":"3873:16:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41918,"name":"address","nodeType":"ElementaryTypeName","src":"3873:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41921,"mutability":"mutable","name":"tokenHolder","nameLocation":"3899:11:46","nodeType":"VariableDeclaration","scope":41926,"src":"3891:19:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41920,"name":"address","nodeType":"ElementaryTypeName","src":"3891:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3872:39:46"},"returnParameters":{"id":41925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41926,"src":"3935:4:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41923,"name":"bool","nodeType":"ElementaryTypeName","src":"3935:4:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3934:6:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41932,"nodeType":"FunctionDefinition","src":"4185:54:46","nodes":[],"documentation":{"id":41927,"nodeType":"StructuredDocumentation","src":"3947:233:46","text":" @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."},"functionSelector":"959b8c3f","implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"4194:17:46","parameters":{"id":41930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41929,"mutability":"mutable","name":"operator","nameLocation":"4220:8:46","nodeType":"VariableDeclaration","scope":41932,"src":"4212:16:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41928,"name":"address","nodeType":"ElementaryTypeName","src":"4212:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4211:18:46"},"returnParameters":{"id":41931,"nodeType":"ParameterList","parameters":[],"src":"4238:0:46"},"scope":41986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41938,"nodeType":"FunctionDefinition","src":"4511:51:46","nodes":[],"documentation":{"id":41933,"nodeType":"StructuredDocumentation","src":"4245:261:46","text":" @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."},"functionSelector":"fad8b32a","implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"4520:14:46","parameters":{"id":41936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41935,"mutability":"mutable","name":"operator","nameLocation":"4543:8:46","nodeType":"VariableDeclaration","scope":41938,"src":"4535:16:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41934,"name":"address","nodeType":"ElementaryTypeName","src":"4535:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4534:18:46"},"returnParameters":{"id":41937,"nodeType":"ParameterList","parameters":[],"src":"4561:0:46"},"scope":41986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41945,"nodeType":"FunctionDefinition","src":"4911:69:46","nodes":[],"documentation":{"id":41939,"nodeType":"StructuredDocumentation","src":"4568:338:46","text":" @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."},"functionSelector":"06e48538","implemented":false,"kind":"function","modifiers":[],"name":"defaultOperators","nameLocation":"4920:16:46","parameters":{"id":41940,"nodeType":"ParameterList","parameters":[],"src":"4936:2:46"},"returnParameters":{"id":41944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41945,"src":"4962:16:46","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":41941,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":41942,"nodeType":"ArrayTypeName","src":"4962:9:46","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4961:18:46"},"scope":41986,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":41959,"nodeType":"FunctionDefinition","src":"5705:178:46","nodes":[],"documentation":{"id":41946,"nodeType":"StructuredDocumentation","src":"4986:714:46","text":" @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."},"functionSelector":"62ad1b83","implemented":false,"kind":"function","modifiers":[],"name":"operatorSend","nameLocation":"5714:12:46","parameters":{"id":41957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41948,"mutability":"mutable","name":"sender","nameLocation":"5744:6:46","nodeType":"VariableDeclaration","scope":41959,"src":"5736:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41947,"name":"address","nodeType":"ElementaryTypeName","src":"5736:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41950,"mutability":"mutable","name":"recipient","nameLocation":"5768:9:46","nodeType":"VariableDeclaration","scope":41959,"src":"5760:17:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41949,"name":"address","nodeType":"ElementaryTypeName","src":"5760:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41952,"mutability":"mutable","name":"amount","nameLocation":"5795:6:46","nodeType":"VariableDeclaration","scope":41959,"src":"5787:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41951,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41954,"mutability":"mutable","name":"data","nameLocation":"5826:4:46","nodeType":"VariableDeclaration","scope":41959,"src":"5811:19:46","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41953,"name":"bytes","nodeType":"ElementaryTypeName","src":"5811:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41956,"mutability":"mutable","name":"operatorData","nameLocation":"5855:12:46","nodeType":"VariableDeclaration","scope":41959,"src":"5840:27:46","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41955,"name":"bytes","nodeType":"ElementaryTypeName","src":"5840:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5726:147:46"},"returnParameters":{"id":41958,"nodeType":"ParameterList","parameters":[],"src":"5882:0:46"},"scope":41986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41971,"nodeType":"FunctionDefinition","src":"6426:114:46","nodes":[],"documentation":{"id":41960,"nodeType":"StructuredDocumentation","src":"5889:532:46","text":" @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."},"functionSelector":"fc673c4f","implemented":false,"kind":"function","modifiers":[],"name":"operatorBurn","nameLocation":"6435:12:46","parameters":{"id":41969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41962,"mutability":"mutable","name":"account","nameLocation":"6456:7:46","nodeType":"VariableDeclaration","scope":41971,"src":"6448:15:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41961,"name":"address","nodeType":"ElementaryTypeName","src":"6448:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41964,"mutability":"mutable","name":"amount","nameLocation":"6473:6:46","nodeType":"VariableDeclaration","scope":41971,"src":"6465:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41963,"name":"uint256","nodeType":"ElementaryTypeName","src":"6465:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41966,"mutability":"mutable","name":"data","nameLocation":"6496:4:46","nodeType":"VariableDeclaration","scope":41971,"src":"6481:19:46","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41965,"name":"bytes","nodeType":"ElementaryTypeName","src":"6481:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41968,"mutability":"mutable","name":"operatorData","nameLocation":"6517:12:46","nodeType":"VariableDeclaration","scope":41971,"src":"6502:27:46","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":41967,"name":"bytes","nodeType":"ElementaryTypeName","src":"6502:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6447:83:46"},"returnParameters":{"id":41970,"nodeType":"ParameterList","parameters":[],"src":"6539:0:46"},"scope":41986,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":41985,"nodeType":"EventDefinition","src":"6546:181:46","nodes":[],"anonymous":false,"eventSelector":"06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987","name":"Sent","nameLocation":"6552:4:46","parameters":{"id":41984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41973,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6582:8:46","nodeType":"VariableDeclaration","scope":41985,"src":"6566:24:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41972,"name":"address","nodeType":"ElementaryTypeName","src":"6566:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41975,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"6616:4:46","nodeType":"VariableDeclaration","scope":41985,"src":"6600:20:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41974,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41977,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"6646:2:46","nodeType":"VariableDeclaration","scope":41985,"src":"6630:18:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41976,"name":"address","nodeType":"ElementaryTypeName","src":"6630:7:46","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41979,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6666:6:46","nodeType":"VariableDeclaration","scope":41985,"src":"6658:14:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41978,"name":"uint256","nodeType":"ElementaryTypeName","src":"6658:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41981,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"6688:4:46","nodeType":"VariableDeclaration","scope":41985,"src":"6682:10:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41980,"name":"bytes","nodeType":"ElementaryTypeName","src":"6682:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":41983,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"6708:12:46","nodeType":"VariableDeclaration","scope":41985,"src":"6702:18:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41982,"name":"bytes","nodeType":"ElementaryTypeName","src":"6702:5:46","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6556:170:46"}}],"abstract":false,"baseContracts":[],"canonicalName":"IERC777","contractDependencies":[],"contractKind":"interface","documentation":{"id":41826,"nodeType":"StructuredDocumentation","src":"133:372:46","text":" @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."},"fullyImplemented":false,"linearizedBaseContracts":[41986],"name":"IERC777","nameLocation":"516:7:46","scope":41987,"usedErrors":[],"usedEvents":[41839,41852,41859,41866,41985]}],"license":"MIT"},"id":46}